name: Python application CI/CD

on:
  push:
    paths:
      - '.github/workflows/**'
      - 'app_python/**'

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app_python
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - name: Install dependencies and lint
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run tests with pytest
        run: |
          pip install pytest Flask-Testing
          pytest
      - name: Check for vulnerabilities with Snyk
        uses: snyk/actions/python-3.10@master
        with:
          args: --skip-unresolved app_python/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        run: |
          docker buildx create --name mybuilder --driver docker-container --use
          docker buildx inspect --bootstrap

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          builder: mybuilder
          context: "{{defaultContext}}:app_python/"
          push: true
          tags: rmoll/moscow_time_web_app:latest
          platforms: linux/amd64,linux/arm64
